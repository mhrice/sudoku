{"version":3,"sources":["logo.svg","puzzle.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Puzzle","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","solveSudokuRunner","console","log","state","puzzle","solveSudoku","setState","noSolution","changeItemClick","row","col","changeRow","changeCol","savedVal","setItem","onKeyPressed","e","keyCode","val","Number","String","fromCharCode","invalid","usedInRow","usedInCol","usedInBox","invalidVal","clearPuzzle","newPuzzle","slice","i","N","j","document","addEventListener","removeEventListener","_this$getNextLocation","getNextLocation","value","isSafe","num","_this2","react_default","a","createElement","Fragment","className","onClick","tabIndex","map","index","borderStyle","finalBorder","style","borderTop","borderBottom","item","jindex","backgroundStyle","borderLeft","backgroundColor","Component","App","marginTop","marginBottom","src_puzzle","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.69dfad54.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport \"./puzzle.css\"\r\n\r\n\r\nclass Puzzle extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state =  {\r\n      puzzle: [\r\n        [0, 9, 0, 3, 1, 5, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 6, 9, 5, 8],\r\n        [6, 2, 0, 0, 9, 0, 4, 0, 0],\r\n        [4, 0, 6, 0, 0, 0, 2, 0, 5],\r\n        [0, 0, 1, 8, 5, 0, 0, 4, 0],\r\n        [0, 7, 2, 1, 6, 0, 0, 8, 0],\r\n        [3, 0, 0, 5, 0, 9, 0, 0, 4],\r\n        [0, 5, 0, 0, 7, 3, 0, 0, 6],\r\n        [2, 4, 7, 0, 0, 0, 5, 9, 0]\r\n      ],\r\n      N: 9,\r\n      changeRow: -1,\r\n      changeCol: -1,\r\n      savedVal: -1,\r\n      invalid: false,\r\n      invalidVal: -1,\r\n      noSolution: false\r\n    }\r\n  }\r\n  componentDidMount() {\r\n      document.addEventListener(\"keydown\", this.onKeyPressed);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n      document.removeEventListener(\"keydown\", this.onKeyPressed);\r\n  }\r\n\r\n  solveSudokuRunner = () =>{\r\n    console.log(this.state.puzzle)\r\n    if(this.solveSudoku()){\r\n        console.log(\"YAY\");\r\n    } else {\r\n      console.log(\"NO\");\r\n      this.setState({noSolution: true})\r\n    }\r\n    console.log(this.state.puzzle);\r\n  }\r\n\r\n  solveSudoku(){\r\n\r\n    let {row, col} = this.getNextLocation();\r\n    if(row == null){\r\n      return true;\r\n    }\r\n    for(let value = 1; value <= 9; value++){\r\n      if(this.isSafe(row, col, value)){\r\n        // this.state.puzzle[row][col] = value;\r\n        this.setItem(row, col, value);\r\n        if(this.solveSudoku()){\r\n          return true;\r\n        }\r\n        this.setItem(row, col, 0);\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  setItem(row, col, value){\r\n    let newPuzzle = this.state.puzzle.slice();\r\n    newPuzzle[row][col] = value;\r\n    this.setState({puzzle: newPuzzle});\r\n  }\r\n\r\n  getNextLocation(){\r\n    for (let row = 0; row < this.state.N; row++){\r\n      for (let col = 0; col < this.state.N; col++){\r\n        if (this.state.puzzle[row][col] === 0){\r\n          return {row: row, col: col};\r\n        }\r\n      }\r\n    }\r\n    return {row: null, col: null};\r\n  }\r\n\r\n  isSafe(row, col, val){\r\n    return (\r\n      !this.usedInRow(row, val) && !this.usedInCol(col, val) &&\r\n      !this.usedInBox(row - row % 3, col - col % 3, val) &&\r\n      this.state.puzzle[row][col] === 0\r\n    );\r\n  }\r\n\r\n  usedInRow(row, num){\r\n    for(let i = 0; i < this.state.N; i++){\r\n        if(this.state.puzzle[row][i] === num){\r\n          return true;\r\n        }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  usedInCol(col, num){\r\n    for(let i = 0; i < this.state.N; i++){\r\n        if(this.state.puzzle[i][col] === num){\r\n          return true;\r\n        }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  usedInBox(row, col, num){\r\n    for (let i = 0; i < 3; i++){\r\n      for (let j = 0; j < 3; j++){\r\n        if (this.state.puzzle[i+row][j+col] === num){\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n        return false;\r\n  }\r\n\r\n  changeItemClick = (row, col)=>{\r\n      if(row === this.state.changeRow && col == this.state.changeCol){\r\n        if(this.state.changeRow !== -1 && this.state.savedVal !== -1){\r\n          this.setItem(this.state.changeRow, this.state.changeCol, this.state.savedVal);\r\n        }\r\n        this.setState({changeRow: -1, changeCol: -1, savedVal: -1})\r\n      } else {\r\n        this.setState({changeRow: row, changeCol: col, savedVal: this.state.puzzle[row][col]})\r\n        if(this.state.changeRow !== -1 && this.state.savedVal !== -1){\r\n          this.setItem(this.state.changeRow, this.state.changeCol, this.state.savedVal);\r\n        }\r\n        this.setItem(row, col, 0);\r\n      }\r\n      this.setState({noSolution: false})\r\n      \r\n\r\n    }\r\n\r\n  onKeyPressed = (e) =>{\r\n    let row = this.state.changeRow;\r\n    let col = this.state.changeCol;\r\n    if(row != -1 && col != -1){\r\n      console.log(e.keyCode)\r\n      if ((e.keyCode >= 48 && e.keyCode <= 57) || (e.keyCode >= 96 && e.keyCode <= 105)) {\r\n\r\n      // 0-9 only\r\n        let val = Number(String.fromCharCode(e.keyCode));\r\n        console.log(val)\r\n        if(val === 0 ){\r\n          this.setItem(row, col, val);\r\n          this.setState({savedVal: val, invalid: false})\r\n        }\r\n        else if(!this.usedInRow(row, val) && !this.usedInCol(col, val) &&\r\n          !this.usedInBox(row - row % 3, col - col % 3, val)){\r\n            this.setItem(row, col, val);\r\n            this.setState({savedVal: val, invalid: false})\r\n        } else {\r\n          //INVALID INPUT\r\n          console.log(\"INVALID INPUT\", val)\r\n          this.setState({invalid: true, invalidVal: val})\r\n        }\r\n      }\r\n    }\r\n    this.setState({noSolution: false})\r\n  }\r\n\r\n  clearPuzzle = () =>{\r\n    let newPuzzle = this.state.puzzle.slice();\r\n    for(let i = 0; i < this.state.N; i++){\r\n      for(let j = 0; j < this.state.N; j++){\r\n        newPuzzle[i][j] = 0;\r\n      }\r\n    }\r\n    this.setState({puzzle: newPuzzle});\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <React.Fragment>\r\n      <button className=\"button solve-button\" onClick={this.solveSudokuRunner}> Solve Puzzle </button>\r\n      <button className=\"button clear-button\" onClick={this.clearPuzzle}> Clear Puzzle </button>\r\n\r\n      <div className=\"puzzle-container\" tabIndex = \"0\">\r\n      {this.state.puzzle.map((row, index)=>{\r\n        let borderStyle, finalBorder;\r\n        if(index%3 == 0){\r\n          borderStyle = \"3px solid black\";\r\n        } else {\r\n          borderStyle = \"1px solid black\";\r\n        }\r\n        if(index === this.state.N - 1){\r\n          finalBorder = \"3px solid black\";\r\n        } else {\r\n          finalBorder = \"0px\";\r\n        }\r\n        return (\r\n          <div className=\"row\" style={{borderTop: borderStyle, borderBottom: finalBorder}}>\r\n          {row.map((item, jindex)=>{\r\n            if(item === 0) item = \" \";\r\n            let borderStyle, backgroundStyle;\r\n            if(jindex%3 == 0){\r\n              borderStyle = \"3px solid black\";\r\n            } else {\r\n              borderStyle = \"1px solid black\";\r\n            }\r\n            if(index === this.state.changeRow && jindex === this.state.changeCol){\r\n              backgroundStyle = \"#2196f3\";\r\n            } else {\r\n              backgroundStyle = \"white\";\r\n            }\r\n            return <div className=\"item\" style={{borderLeft: borderStyle, backgroundColor: backgroundStyle}} onClick={(e)=>this.changeItemClick(index, jindex)}>{item}</div>\r\n          })}\r\n          </div>\r\n        )\r\n      })}\r\n      </div>\r\n      {this.state.invalid &&\r\n          <div className=\"invalid\">{this.state.invalidVal}: Invalid Input</div>\r\n        }\r\n\r\n      {this.state.noSolution && <div className=\"invalid\">No Solution!</div>}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n}\r\nexport default Puzzle;\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Puzzle from \"./puzzle\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 style={{marginTop: \"0px\", marginBottom: \"0.25em\"}}>Sudoku Solver</h1>\n        <Puzzle/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}